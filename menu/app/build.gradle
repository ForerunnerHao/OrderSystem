/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // MySQL JDBC
    implementation 'mysql:mysql-connector-java:8.0.26'

    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'

    //https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.4.11'

//     mybatis
//     https://mvnrepository.com/artifact/org.mybatis/mybatis
//    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.13'

}

application {
    // Define the main class for the application.
    mainClass = 'menu.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    // report is always generated after tests run
    finalizedBy jacocoTestReport
}

run {
    standardInput = System.in
}

jar {
    manifest {
        attributes 'Main-Class': 'menu.App'
    }
}

jacocoTestReport {
    // tests are required to run before generating the report
    dependsOn test
}

//Configuring the JaCoCo Plugin
jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}

//JaCoCo Report configuration
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}